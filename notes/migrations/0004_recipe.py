# Generated by Django 4.2.23 on 2025-08-03 20:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('notes', '0003_rename_ingredients_ingredient'),
    ]

    operations = [
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of your recipe (e.g., 'Hoppy Summer Ale')", max_length=200)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the recipe')),
                ('ingredients', models.JSONField(default=list, help_text='List of ingredients ')),
                ('target_og', models.DecimalField(blank=True, decimal_places=3, help_text='Target original gravity (e.g., 1.050)', max_digits=4, null=True)),
                ('target_fg', models.DecimalField(blank=True, decimal_places=3, help_text='Target final gravity (e.g., 1.010)', max_digits=4, null=True)),
                ('fermentation_start', models.DateField(blank=True, default=django.utils.timezone.now, help_text='Date fermentation began (defaults to today)', null=True)),
                ('fermentation_end', models.DateField(blank=True, help_text='Date fermentation completed', null=True)),
                ('coldcrash_start', models.DateField(blank=True, help_text='Date cold crash began', null=True)),
                ('coldcrash_end', models.DateField(blank=True, help_text='Date cold crash completed', null=True)),
                ('conditioning_start', models.DateField(blank=True, help_text='Date conditioning began', null=True)),
                ('conditioning_end', models.DateField(blank=True, help_text='Date conditioning completed', null=True)),
                ('notes', models.TextField(blank=True, help_text='Brewing observations, adjustments, or tasting notes')),
                ('verdict', models.PositiveSmallIntegerField(blank=True, help_text='Overall rating (1=Poor, 5=Excellent)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this recipe was first created')),
                ('drink_type', models.ForeignKey(help_text='Category of drink (e.g., IPA, Stout)', on_delete=django.db.models.deletion.PROTECT, related_name='recipes', to='notes.drinktype')),
                ('user', models.ForeignKey(help_text='Creator of this recipe', on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ['-created_at'],
            },
        ),
    ]
